QUESTION: Longest Prefix Suffix

Given a string of characters, find the length of the longest proper prefix which is also a proper suffix.

Example 1:

Input: s = "abab"
Output: 2
Explanation: "ab" is the longest proper 
prefix and suffix. 
Example 2:

Input: s = "aaaa"
Output: 3
Explanation: "aaa" is the longest proper 
prefix and suffix. 
Your task:
You do not need to read any input or print anything. The task is to complete the function lps(), which takes a string as input and returns an integer.

Expected Time Complexity: O(|s|)
Expected Auxiliary Space: O(|s|)

Constraints:
1 ≤ |s| ≤ 105
s contains lower case English alphabets


SOLUTION:

int lps(string s) {
	    // Your code goes here
	    int n = s.length();
	    int ls[n];
	    ls[0]=0;
	    int len = 0;
	    int i = 1;
	    while(i < n)
	    {
	        if(s[len] == s[i])
	        {
	          len++;
	          ls[i]=len;
	          i++;
	        }
	        else
	        {
	           if(len==0)
	           {
	               ls[i]=0;
	               i++;
	           }
	           else
	           {
	               len=ls[len-1];
	           }
	        }
	        
	    }
	    
	    return (ls[s.length()-1]);
	
	}
